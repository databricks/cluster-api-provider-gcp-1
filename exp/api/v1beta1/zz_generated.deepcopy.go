//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/apimachinery/pkg/runtime"
	apiv1beta1 "sigs.k8s.io/cluster-api-provider-gcp/api/v1beta1"
	cluster_apiapiv1beta1 "sigs.k8s.io/cluster-api/api/v1beta1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceleratorConfig) DeepCopyInto(out *AcceleratorConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceleratorConfig.
func (in *AcceleratorConfig) DeepCopy() *AcceleratorConfig {
	if in == nil {
		return nil
	}
	out := new(AcceleratorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsConfig) DeepCopyInto(out *AddonsConfig) {
	*out = *in
	if in.DNSCacheConfig != nil {
		in, out := &in.DNSCacheConfig, &out.DNSCacheConfig
		*out = new(DNSCacheConfig)
		**out = **in
	}
	if in.GcePersistentDiskCsiDriverConfig != nil {
		in, out := &in.GcePersistentDiskCsiDriverConfig, &out.GcePersistentDiskCsiDriverConfig
		*out = new(GcePersistentDiskCsiDriverConfig)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsConfig.
func (in *AddonsConfig) DeepCopy() *AddonsConfig {
	if in == nil {
		return nil
	}
	out := new(AddonsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSCacheConfig) DeepCopyInto(out *DNSCacheConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSCacheConfig.
func (in *DNSCacheConfig) DeepCopy() *DNSCacheConfig {
	if in == nil {
		return nil
	}
	out := new(DNSCacheConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSConfig) DeepCopyInto(out *DNSConfig) {
	*out = *in
	if in.ClusterDNS != nil {
		in, out := &in.ClusterDNS, &out.ClusterDNS
		*out = new(ClusterDNS)
		**out = **in
	}
	if in.ClusterDNSScope != nil {
		in, out := &in.ClusterDNSScope, &out.ClusterDNSScope
		*out = new(ClusterDNSScope)
		**out = **in
	}
	if in.ClusterDNSDomain != nil {
		in, out := &in.ClusterDNSDomain, &out.ClusterDNSDomain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSConfig.
func (in *DNSConfig) DeepCopy() *DNSConfig {
	if in == nil {
		return nil
	}
	out := new(DNSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DailyMaintenanceWindow) DeepCopyInto(out *DailyMaintenanceWindow) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DailyMaintenanceWindow.
func (in *DailyMaintenanceWindow) DeepCopy() *DailyMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(DailyMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedCluster) DeepCopyInto(out *GCPManagedCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedCluster.
func (in *GCPManagedCluster) DeepCopy() *GCPManagedCluster {
	if in == nil {
		return nil
	}
	out := new(GCPManagedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedClusterList) DeepCopyInto(out *GCPManagedClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GCPManagedCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedClusterList.
func (in *GCPManagedClusterList) DeepCopy() *GCPManagedClusterList {
	if in == nil {
		return nil
	}
	out := new(GCPManagedClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedClusterSpec) DeepCopyInto(out *GCPManagedClusterSpec) {
	*out = *in
	out.ControlPlaneEndpoint = in.ControlPlaneEndpoint
	in.Network.DeepCopyInto(&out.Network)
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(apiv1beta1.Labels, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.CredentialsRef != nil {
		in, out := &in.CredentialsRef, &out.CredentialsRef
		*out = new(apiv1beta1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedClusterSpec.
func (in *GCPManagedClusterSpec) DeepCopy() *GCPManagedClusterSpec {
	if in == nil {
		return nil
	}
	out := new(GCPManagedClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedClusterStatus) DeepCopyInto(out *GCPManagedClusterStatus) {
	*out = *in
	if in.FailureDomains != nil {
		in, out := &in.FailureDomains, &out.FailureDomains
		*out = make(cluster_apiapiv1beta1.FailureDomains, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.Network.DeepCopyInto(&out.Network)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(cluster_apiapiv1beta1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedClusterStatus.
func (in *GCPManagedClusterStatus) DeepCopy() *GCPManagedClusterStatus {
	if in == nil {
		return nil
	}
	out := new(GCPManagedClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedControlPlane) DeepCopyInto(out *GCPManagedControlPlane) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedControlPlane.
func (in *GCPManagedControlPlane) DeepCopy() *GCPManagedControlPlane {
	if in == nil {
		return nil
	}
	out := new(GCPManagedControlPlane)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedControlPlane) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedControlPlaneList) DeepCopyInto(out *GCPManagedControlPlaneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GCPManagedControlPlane, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedControlPlaneList.
func (in *GCPManagedControlPlaneList) DeepCopy() *GCPManagedControlPlaneList {
	if in == nil {
		return nil
	}
	out := new(GCPManagedControlPlaneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedControlPlaneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedControlPlaneSpec) DeepCopyInto(out *GCPManagedControlPlaneSpec) {
	*out = *in
	if in.ClusterIpv4Cidr != nil {
		in, out := &in.ClusterIpv4Cidr, &out.ClusterIpv4Cidr
		*out = new(string)
		**out = **in
	}
	if in.ReleaseChannel != nil {
		in, out := &in.ReleaseChannel, &out.ReleaseChannel
		*out = new(ReleaseChannel)
		**out = **in
	}
	if in.ControlPlaneVersion != nil {
		in, out := &in.ControlPlaneVersion, &out.ControlPlaneVersion
		*out = new(string)
		**out = **in
	}
	out.Endpoint = in.Endpoint
	if in.AddonsConfig != nil {
		in, out := &in.AddonsConfig, &out.AddonsConfig
		*out = new(AddonsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LoggingConfig != nil {
		in, out := &in.LoggingConfig, &out.LoggingConfig
		*out = new(LoggingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MasterAuthorizedNetworksConfig != nil {
		in, out := &in.MasterAuthorizedNetworksConfig, &out.MasterAuthorizedNetworksConfig
		*out = new(MasterAuthorizedNetworksConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NetworkConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateClusterConfig != nil {
		in, out := &in.PrivateClusterConfig, &out.PrivateClusterConfig
		*out = new(PrivateClusterConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkloadIdentityConfig != nil {
		in, out := &in.WorkloadIdentityConfig, &out.WorkloadIdentityConfig
		*out = new(WorkloadIdentityConfig)
		**out = **in
	}
	if in.ResourceLabels != nil {
		in, out := &in.ResourceLabels, &out.ResourceLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IPAllocationPolicy != nil {
		in, out := &in.IPAllocationPolicy, &out.IPAllocationPolicy
		*out = new(IPAllocationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenancePolicy != nil {
		in, out := &in.MaintenancePolicy, &out.MaintenancePolicy
		*out = new(MaintenancePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultMaxPodsConstraint != nil {
		in, out := &in.DefaultMaxPodsConstraint, &out.DefaultMaxPodsConstraint
		*out = new(MaxPodsConstraint)
		**out = **in
	}
	if in.ShieldedNodes != nil {
		in, out := &in.ShieldedNodes, &out.ShieldedNodes
		*out = new(ShieldedNodes)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedControlPlaneSpec.
func (in *GCPManagedControlPlaneSpec) DeepCopy() *GCPManagedControlPlaneSpec {
	if in == nil {
		return nil
	}
	out := new(GCPManagedControlPlaneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedControlPlaneStatus) DeepCopyInto(out *GCPManagedControlPlaneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(cluster_apiapiv1beta1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedControlPlaneStatus.
func (in *GCPManagedControlPlaneStatus) DeepCopy() *GCPManagedControlPlaneStatus {
	if in == nil {
		return nil
	}
	out := new(GCPManagedControlPlaneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedMachinePool) DeepCopyInto(out *GCPManagedMachinePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedMachinePool.
func (in *GCPManagedMachinePool) DeepCopy() *GCPManagedMachinePool {
	if in == nil {
		return nil
	}
	out := new(GCPManagedMachinePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedMachinePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedMachinePoolList) DeepCopyInto(out *GCPManagedMachinePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GCPManagedMachinePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedMachinePoolList.
func (in *GCPManagedMachinePoolList) DeepCopy() *GCPManagedMachinePoolList {
	if in == nil {
		return nil
	}
	out := new(GCPManagedMachinePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPManagedMachinePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedMachinePoolSpec) DeepCopyInto(out *GCPManagedMachinePoolSpec) {
	*out = *in
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(int32)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(int32)
		**out = **in
	}
	if in.NetworkTags != nil {
		in, out := &in.NetworkTags, &out.NetworkTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(NodePoolAutoScaling)
		(*in).DeepCopyInto(*out)
	}
	if in.KubernetesLabels != nil {
		in, out := &in.KubernetesLabels, &out.KubernetesLabels
		*out = make(apiv1beta1.Labels, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.KubernetesTaints != nil {
		in, out := &in.KubernetesTaints, &out.KubernetesTaints
		*out = make(Taints, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalLabels != nil {
		in, out := &in.AdditionalLabels, &out.AdditionalLabels
		*out = make(apiv1beta1.Labels, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = new(NodePoolManagement)
		**out = **in
	}
	if in.NetworkConfig != nil {
		in, out := &in.NetworkConfig, &out.NetworkConfig
		*out = new(NodeNetworkConfig)
		**out = **in
	}
	if in.MaxPodsConstraint != nil {
		in, out := &in.MaxPodsConstraint, &out.MaxPodsConstraint
		*out = new(int64)
		**out = **in
	}
	if in.ProviderIDList != nil {
		in, out := &in.ProviderIDList, &out.ProviderIDList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Reservation != nil {
		in, out := &in.Reservation, &out.Reservation
		*out = new(string)
		**out = **in
	}
	if in.Accelerators != nil {
		in, out := &in.Accelerators, &out.Accelerators
		*out = make([]*AcceleratorConfig, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(AcceleratorConfig)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedMachinePoolSpec.
func (in *GCPManagedMachinePoolSpec) DeepCopy() *GCPManagedMachinePoolSpec {
	if in == nil {
		return nil
	}
	out := new(GCPManagedMachinePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPManagedMachinePoolStatus) DeepCopyInto(out *GCPManagedMachinePoolStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(cluster_apiapiv1beta1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPManagedMachinePoolStatus.
func (in *GCPManagedMachinePoolStatus) DeepCopy() *GCPManagedMachinePoolStatus {
	if in == nil {
		return nil
	}
	out := new(GCPManagedMachinePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcePersistentDiskCsiDriverConfig) DeepCopyInto(out *GcePersistentDiskCsiDriverConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcePersistentDiskCsiDriverConfig.
func (in *GcePersistentDiskCsiDriverConfig) DeepCopy() *GcePersistentDiskCsiDriverConfig {
	if in == nil {
		return nil
	}
	out := new(GcePersistentDiskCsiDriverConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicy) DeepCopyInto(out *IPAllocationPolicy) {
	*out = *in
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
	if in.ClusterSecondaryRangeName != nil {
		in, out := &in.ClusterSecondaryRangeName, &out.ClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.ServicesSecondaryRangeName != nil {
		in, out := &in.ServicesSecondaryRangeName, &out.ServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.ClusterIpv4CidrBlock != nil {
		in, out := &in.ClusterIpv4CidrBlock, &out.ClusterIpv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesIpv4CidrBlock != nil {
		in, out := &in.ServicesIpv4CidrBlock, &out.ServicesIpv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.AdditionalPodRangeNames != nil {
		in, out := &in.AdditionalPodRangeNames, &out.AdditionalPodRangeNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicy.
func (in *IPAllocationPolicy) DeepCopy() *IPAllocationPolicy {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfig) DeepCopyInto(out *LoggingConfig) {
	*out = *in
	if in.EnableComponents != nil {
		in, out := &in.EnableComponents, &out.EnableComponents
		*out = make([]LoggingComponent, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfig.
func (in *LoggingConfig) DeepCopy() *LoggingConfig {
	if in == nil {
		return nil
	}
	out := new(LoggingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenancePolicy) DeepCopyInto(out *MaintenancePolicy) {
	*out = *in
	if in.DailyMaintenanceWindow != nil {
		in, out := &in.DailyMaintenanceWindow, &out.DailyMaintenanceWindow
		*out = new(DailyMaintenanceWindow)
		**out = **in
	}
	if in.RecurringMaintenanceWindow != nil {
		in, out := &in.RecurringMaintenanceWindow, &out.RecurringMaintenanceWindow
		*out = new(RecurringMaintenanceWindow)
		(*in).DeepCopyInto(*out)
	}
	if in.MaintenanceExclusions != nil {
		in, out := &in.MaintenanceExclusions, &out.MaintenanceExclusions
		*out = make(map[string]*TimeWindow, len(*in))
		for key, val := range *in {
			var outVal *TimeWindow
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(TimeWindow)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenancePolicy.
func (in *MaintenancePolicy) DeepCopy() *MaintenancePolicy {
	if in == nil {
		return nil
	}
	out := new(MaintenancePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfig) DeepCopyInto(out *MasterAuthorizedNetworksConfig) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*MasterAuthorizedNetworksConfigCidrBlock, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(MasterAuthorizedNetworksConfigCidrBlock)
				**out = **in
			}
		}
	}
	if in.GcpPublicCidrsAccessEnabled != nil {
		in, out := &in.GcpPublicCidrsAccessEnabled, &out.GcpPublicCidrsAccessEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfig.
func (in *MasterAuthorizedNetworksConfig) DeepCopy() *MasterAuthorizedNetworksConfig {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigCidrBlock) DeepCopyInto(out *MasterAuthorizedNetworksConfigCidrBlock) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigCidrBlock.
func (in *MasterAuthorizedNetworksConfigCidrBlock) DeepCopy() *MasterAuthorizedNetworksConfigCidrBlock {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigCidrBlock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxPodsConstraint) DeepCopyInto(out *MaxPodsConstraint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxPodsConstraint.
func (in *MaxPodsConstraint) DeepCopy() *MaxPodsConstraint {
	if in == nil {
		return nil
	}
	out := new(MaxPodsConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkConfig) DeepCopyInto(out *NetworkConfig) {
	*out = *in
	if in.DatapathProvider != nil {
		in, out := &in.DatapathProvider, &out.DatapathProvider
		*out = new(DatapathProvider)
		**out = **in
	}
	if in.DNSConfig != nil {
		in, out := &in.DNSConfig, &out.DNSConfig
		*out = new(DNSConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkConfig.
func (in *NetworkConfig) DeepCopy() *NetworkConfig {
	if in == nil {
		return nil
	}
	out := new(NetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeNetworkConfig) DeepCopyInto(out *NodeNetworkConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeNetworkConfig.
func (in *NodeNetworkConfig) DeepCopy() *NodeNetworkConfig {
	if in == nil {
		return nil
	}
	out := new(NodeNetworkConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolAutoScaling) DeepCopyInto(out *NodePoolAutoScaling) {
	*out = *in
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int32)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int32)
		**out = **in
	}
	if in.EnableAutoscaling != nil {
		in, out := &in.EnableAutoscaling, &out.EnableAutoscaling
		*out = new(bool)
		**out = **in
	}
	if in.LocationPolicy != nil {
		in, out := &in.LocationPolicy, &out.LocationPolicy
		*out = new(ManagedNodePoolLocationPolicy)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolAutoScaling.
func (in *NodePoolAutoScaling) DeepCopy() *NodePoolAutoScaling {
	if in == nil {
		return nil
	}
	out := new(NodePoolAutoScaling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolManagement) DeepCopyInto(out *NodePoolManagement) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolManagement.
func (in *NodePoolManagement) DeepCopy() *NodePoolManagement {
	if in == nil {
		return nil
	}
	out := new(NodePoolManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateClusterConfig) DeepCopyInto(out *PrivateClusterConfig) {
	*out = *in
	if in.MasterIpv4CidrBlock != nil {
		in, out := &in.MasterIpv4CidrBlock, &out.MasterIpv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.PrivateClusterMasterGlobalAccessEnabled != nil {
		in, out := &in.PrivateClusterMasterGlobalAccessEnabled, &out.PrivateClusterMasterGlobalAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateEndpointSubnetwork != nil {
		in, out := &in.PrivateEndpointSubnetwork, &out.PrivateEndpointSubnetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateClusterConfig.
func (in *PrivateClusterConfig) DeepCopy() *PrivateClusterConfig {
	if in == nil {
		return nil
	}
	out := new(PrivateClusterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecurringMaintenanceWindow) DeepCopyInto(out *RecurringMaintenanceWindow) {
	*out = *in
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = new(TimeWindow)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecurringMaintenanceWindow.
func (in *RecurringMaintenanceWindow) DeepCopy() *RecurringMaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(RecurringMaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedNodes) DeepCopyInto(out *ShieldedNodes) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedNodes.
func (in *ShieldedNodes) DeepCopy() *ShieldedNodes {
	if in == nil {
		return nil
	}
	out := new(ShieldedNodes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Taint) DeepCopyInto(out *Taint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Taint.
func (in *Taint) DeepCopy() *Taint {
	if in == nil {
		return nil
	}
	out := new(Taint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Taints) DeepCopyInto(out *Taints) {
	{
		in := &in
		*out = make(Taints, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Taints.
func (in Taints) DeepCopy() Taints {
	if in == nil {
		return nil
	}
	out := new(Taints)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWindow) DeepCopyInto(out *TimeWindow) {
	*out = *in
	if in.MaintenanceExclusionOption != nil {
		in, out := &in.MaintenanceExclusionOption, &out.MaintenanceExclusionOption
		*out = new(MaintenanceExclusionOption)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWindow.
func (in *TimeWindow) DeepCopy() *TimeWindow {
	if in == nil {
		return nil
	}
	out := new(TimeWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadIdentityConfig) DeepCopyInto(out *WorkloadIdentityConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadIdentityConfig.
func (in *WorkloadIdentityConfig) DeepCopy() *WorkloadIdentityConfig {
	if in == nil {
		return nil
	}
	out := new(WorkloadIdentityConfig)
	in.DeepCopyInto(out)
	return out
}
